name: Production Branch Deploy Automation

on:
  push:
    branches:
      - production

env:
  DOCKERHUB_USERNAME: insd47
  DOCKERHUB_REPO: stocktree-backend
  DOCKERHUB_REPO_TAG: latest
  EC2_USERNAME: ubuntu
  EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}
  COMPOSE_DIRECTORY: ~/stocktree
  COMPOSE_SERVICE: backend
  

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Environment
      run: |
        echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV
        echo "SPRINGBOOT_JWT_SECRET=${{ secrets.SPRINGBOOT_JWT_SECRET }}" >> $GITHUB_ENV
        echo "CLOUD_AWS_CREDENTIALS_ACCESSKEY=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESSKEY }}" >> $GITHUB_ENV
        echo "CLOUD_AWS_CREDENTIALS_SECRETKEY=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRETKEY }}" >> $GITHUB_ENV
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    - name: Copy Dist File to Root
      run: cp build/libs/*.jar ./app.jar
        
    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
        
    - name: Build and push Docker images
      run: |
        docker build --build-arg HJFUND_DEPLOY_TYPE=$DOCKERHUB_REPO_TAG -t $DOCKERHUB_REPO .
        docker tag $DOCKERHUB_REPO:latest $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$DOCKERHUB_REPO_TAG
        docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$DOCKERHUB_REPO_TAG
        
    - name: Prepare to Deploy
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Deploy Service
      run: |
        ssh -T $EC2_USERNAME@$EC2_INSTANCE_IP << EOF
          cd $COMPOSE_DIRECTORY
          sudo docker compose pull $COMPOSE_SERVICE
          sudo docker compose up -d $COMPOSE_SERVICE
        EOF
